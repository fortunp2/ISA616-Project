breaks = c(0, 25000, 50000, 75000, 100000)) +
ylab("Retail Revenue ($)") +
xlab("Store Location") +
labs(title = "Total Retail Revenue by Store Location") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p1
# Aggregating Average Retail Revenue by Store Location
storemean <- aggregate(RetailRevenue~UIDStoreLocation, beach, mean)
# Creating a plot and assigning it to an object
p2 <- ggplot(storemean, aes(x = reorder(UIDStoreLocation, -RetailRevenue), y = RetailRevenue)) +
geom_col(colour = "black", fill = "gold") +
ylab("Average Retail Revenue ($)") +
xlab("Store Location") +
labs(title = "Average Retail Revenue by Number of Clients at each Store Location") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p2
# Aggregating Retail Revenue by Membership Level
levelsum <- aggregate(RetailRevenue~MembershipLevel, beach, sum)
# Creating a plot and assigning it to an object
p3 <- ggplot(levelsum, aes(x = reorder(MembershipLevel, -RetailRevenue), y = RetailRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 155000),
breaks = c(0, 25000, 50000, 75000, 100000, 125000, 150000)) +
ylab("Retail Revenue ($)") +
xlab("Membership Level") +
labs(title = "Total Retail Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p3
# Aggregating Retail Revenue by Membership Type
typesum <- aggregate(RetailRevenue~MembershipType, beach, sum)
# Creating a plot and assigning it to an object
p4 <- ggplot(typesum, aes(x = reorder(MembershipType, -RetailRevenue), y = RetailRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 450000),
breaks = seq(from = 0, to = 450000, by = 50000)) +
ylab("Retail Revenue ($)") +
xlab("Membership Type") +
labs(title = "Total Retail Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()
)
p4
# Aggregating Upgrade Revenue by Membership Level
levelsum1 <- aggregate(UpgradeRevenue~MembershipLevel, beach, sum)
# Creating a plot and assigning it to an object
p5 <- ggplot(levelsum1, aes(x = reorder(MembershipLevel, -UpgradeRevenue), y = UpgradeRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 61000),
breaks = c(0, 10000, 20000, 30000, 40000, 50000, 60000, 70000)) +
ylab("Upgrade Revenue ($)") +
xlab("Membership Level") +
labs(title = "Total Upgrade Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p5
# Aggregating Upgrade Revenue by Membership Type
typesum1 <- aggregate(UpgradeRevenue~MembershipType, beach, sum)
# Creating a plot and assigning it to an object
p6 <- ggplot(typesum1, aes(x = reorder(MembershipType, -UpgradeRevenue), y = UpgradeRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 110000),
breaks = c(0, 25000, 50000, 75000, 100000)) +
ylab("Upgrade Revenue ($)") +
xlab("Membership Level") +
labs(title = "Total Upgrade Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p6
# Creating dummy variables for factors in the data frame
dum1 <- model.matrix(~0 + UIDStoreLocation, data = beach)
dum1 <- as.data.frame(dum1)
dum2 <- model.matrix(~0 + Gender, data = beach)
dum2 <- as.data.frame(dum2)
dum3 <- model.matrix(~0 + MembershipType, data = beach)
dum3 <- as.data.frame(dum3)
dum4 <- model.matrix(~0 + MembershipLevel, data = beach)
dum4 <- as.data.frame(dum4)
# Adding dummy variables to the data frame
beach <- cbind(beach, dum1, dum2, dum3, dum4)
beach1 <- beach %>%
select(-UIDStoreLocation, -Gender, -MembershipType, -MembershipLevel,
-UIDStoreLocationA, -GenderMale, -MembershipLevelInstant, MembershipTypeAnnual)
# Recoding each dummy variable as factors
beach$UIDStoreLocationB <- as.factor(beach$UIDStoreLocationB)
beach$UIDStoreLocationC <- as.factor(beach$UIDStoreLocationC)
beach$UIDStoreLocationD <- as.factor(beach$UIDStoreLocationD)
beach$UIDStoreLocationE <- as.factor(beach$UIDStoreLocationE)
beach$UIDStoreLocationF <- as.factor(beach$UIDStoreLocationF)
beach$UIDStoreLocationG <- as.factor(beach$UIDStoreLocationG)
beach$UIDStoreLocationH <- as.factor(beach$UIDStoreLocationH)
beach$UIDStoreLocationI <- as.factor(beach$UIDStoreLocationI)
beach$UIDStoreLocationJ <- as.factor(beach$UIDStoreLocationJ)
beach$GenderFemale <- as.factor(beach$GenderFemale)
beach$`MembershipTypeNon-Member` <- as.factor(beach$`MembershipTypeNon-Member`)
beach$MembershipTypeMonthly <- as.factor(beach$MembershipTypeMonthly)
beach$MembershipLevelFast <- as.factor(beach$MembershipLevelFast)
beach$MembershipLevelFaster <- as.factor(beach$MembershipLevelFaster)
beach$MembershipLevelFastest <- as.factor(beach$MembershipLevelFastest)
beach$`MembershipLevelNon-Member` <- as.factor(beach$`MembershipLevelNon-Member`)
beachRetail <- beach1 %>%
select(-UpgradeRevenue)
beachUpgrade <- beach1 %>%
select(-RetailRevenue)
# Creating linear model 1
modelRetail <- lm(RetailRevenue ~ ., data = beachRetail)
# Creating linear model 2
modelUpgrade <- lm(UpgradeRevenue ~ ., data = beachUpgrade)
summary(modelRetail)
summary(modelUpgrade)
summary(modelRetail)
modelRetail
summary(modelRetail)
summary(modelUpgrade)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(knitr)
library(tidyverse)
library(readr)
# Loading the library that reads in csv files
library(readr)
# Reading in the Beach Tan dataset
beach <- read.csv("BeachTan/BeachTan.csv")
# Viewing the head of the data
head(beach)
# Viewing the structure of the data
str(beach)
# changing the following numeric variables to factors
beach$UIDStoreLocation <- as.factor(beach$UIDStoreLocation)
beach$Gender <- as.factor(beach$Gender)
beach$MembershipType <- as.factor(beach$MembershipType)
beach$MembershipLevel <- as.factor(beach$MembershipLevel)
# changing the following character variable to a date
beach$DateJoined <- as.Date(beach$DateJoined, "%m/%d/%Y")
# Recoding the factors in Gender
beach$Gender <- recode_factor(beach$Gender,
"0" = "Female",
"1" = "Male")
# Recoding the factors in MemebershipType
beach$MembershipType <- recode_factor(beach$MembershipType,
"0" = "Non-Member",
"1" = "Monthly",
"2" = "Annual")
# Recoding the factors in MembershipLevel
beach$MembershipLevel <- recode_factor(beach$MembershipLevel,
"0" = "Non-Member",
"1" = "Fast",
"2" = "Faster",
"3" = "Fastest",
"4" = "Instant")
# Recoding the factors in UIDStoreLocation
beach$UIDStoreLocation <- recode_factor(beach$UIDStoreLocation,
"1" = "A",
"2" = "B",
"3" = "C",
"4" = "D",
"5" = "E",
"6" = "F",
"7" = "G",
"8" = "H",
"9" = "I",
"10" = "J")
# Loading the DataExplorer package
library(DataExplorer)
plot_missing(beach)
# Distribution of the continuous variables
plot_histogram(beach)
# The piping operator (%>%) and `select` functions belong to the dplyr package
beach <- beach %>%
select(-UIDClient)
# The `filter` function belongs to the dplyr package
filter(beach, DaysSinceJoined > 40000)
beach <- beach %>%
filter(DaysSinceJoined < 40000)
hist(beach$DaysSinceJoined)
beach <- beach %>%
select(-DateJoined)
# Distribution of factors
plot_bar(beach)
# The `na_omit` function belongs to the stats package.
beach <- na.omit(beach)
plot_missing(beach)
# Aggregating Retail Revenue by Store Location
storesum <- aggregate(RetailRevenue~UIDStoreLocation, beach, sum)
# Creating a plot and assigning it to an object
p1 <- ggplot(storesum, aes(x = reorder(UIDStoreLocation, -RetailRevenue), y = RetailRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 100001),
breaks = c(0, 25000, 50000, 75000, 100000)) +
ylab("Retail Revenue ($)") +
xlab("Store Location") +
labs(title = "Total Retail Revenue by Store Location") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p1
# Aggregating Average Retail Revenue by Store Location
storemean <- aggregate(RetailRevenue~UIDStoreLocation, beach, mean)
# Creating a plot and assigning it to an object
p2 <- ggplot(storemean, aes(x = reorder(UIDStoreLocation, -RetailRevenue), y = RetailRevenue)) +
geom_col(colour = "black", fill = "gold") +
ylab("Average Retail Revenue ($)") +
xlab("Store Location") +
labs(title = "Average Retail Revenue by Number of Clients at each Store Location") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p2
# Aggregating Retail Revenue by Membership Level
levelsum <- aggregate(RetailRevenue~MembershipLevel, beach, sum)
# Creating a plot and assigning it to an object
p3 <- ggplot(levelsum, aes(x = reorder(MembershipLevel, -RetailRevenue), y = RetailRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 155000),
breaks = c(0, 25000, 50000, 75000, 100000, 125000, 150000)) +
ylab("Retail Revenue ($)") +
xlab("Membership Level") +
labs(title = "Total Retail Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p3
# Aggregating Retail Revenue by Membership Type
typesum <- aggregate(RetailRevenue~MembershipType, beach, sum)
# Creating a plot and assigning it to an object
p4 <- ggplot(typesum, aes(x = reorder(MembershipType, -RetailRevenue), y = RetailRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 450000),
breaks = seq(from = 0, to = 450000, by = 50000)) +
ylab("Retail Revenue ($)") +
xlab("Membership Type") +
labs(title = "Total Retail Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()
)
p4
# Aggregating Upgrade Revenue by Membership Level
levelsum1 <- aggregate(UpgradeRevenue~MembershipLevel, beach, sum)
# Creating a plot and assigning it to an object
p5 <- ggplot(levelsum1, aes(x = reorder(MembershipLevel, -UpgradeRevenue), y = UpgradeRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 61000),
breaks = c(0, 10000, 20000, 30000, 40000, 50000, 60000, 70000)) +
ylab("Upgrade Revenue ($)") +
xlab("Membership Level") +
labs(title = "Total Upgrade Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p5
# Aggregating Upgrade Revenue by Membership Type
typesum1 <- aggregate(UpgradeRevenue~MembershipType, beach, sum)
# Creating a plot and assigning it to an object
p6 <- ggplot(typesum1, aes(x = reorder(MembershipType, -UpgradeRevenue), y = UpgradeRevenue)) +
geom_col(colour = "black", fill = "gold") +
scale_y_continuous(expand = c(0,0),
limits = c(0, 110000),
breaks = c(0, 25000, 50000, 75000, 100000)) +
ylab("Upgrade Revenue ($)") +
xlab("Membership Level") +
labs(title = "Total Upgrade Revenue by Membership Level") +
theme_bw() +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
p6
# Creating dummy variables for factors in the data frame
dum1 <- model.matrix(~0 + UIDStoreLocation, data = beach)
dum1 <- as.data.frame(dum1)
dum2 <- model.matrix(~0 + Gender, data = beach)
dum2 <- as.data.frame(dum2)
dum3 <- model.matrix(~0 + MembershipType, data = beach)
dum3 <- as.data.frame(dum3)
dum4 <- model.matrix(~0 + MembershipLevel, data = beach)
dum4 <- as.data.frame(dum4)
# Adding dummy variables to the data frame
beach <- cbind(beach, dum1, dum2, dum3, dum4)
beach1 <- beach %>%
select(-UIDStoreLocation, -Gender, -MembershipType, -MembershipLevel,
-UIDStoreLocationA, -GenderMale, -MembershipLevelInstant, MembershipTypeAnnual)
# Recoding each dummy variable as factors
beach1$UIDStoreLocationB <- as.factor(beach1$UIDStoreLocationB)
beach1$UIDStoreLocationC <- as.factor(beach1$UIDStoreLocationC)
beach1$UIDStoreLocationD <- as.factor(beach1$UIDStoreLocationD)
beach1$UIDStoreLocationE <- as.factor(beach1$UIDStoreLocationE)
beach1$UIDStoreLocationF <- as.factor(beach1$UIDStoreLocationF)
beach1$UIDStoreLocationG <- as.factor(beach1$UIDStoreLocationG)
beach1$UIDStoreLocationH <- as.factor(beach1$UIDStoreLocationH)
beach1$UIDStoreLocationI <- as.factor(beach1$UIDStoreLocationI)
beach1$UIDStoreLocationJ <- as.factor(beach1$UIDStoreLocationJ)
beach1$GenderFemale <- as.factor(beach1$GenderFemale)
beach1$`MembershipTypeNon-Member` <- as.factor(beach1$`MembershipTypeNon-Member`)
beach1$MembershipTypeMonthly <- as.factor(beach1$MembershipTypeMonthly)
beach1$MembershipLevelFast <- as.factor(beach1$MembershipLevelFast)
beach1$MembershipLevelFaster <- as.factor(beach1$MembershipLevelFaster)
beach1$MembershipLevelFastest <- as.factor(beach1$MembershipLevelFastest)
beach1$`MembershipLevelNon-Member` <- as.factor(beach1$`MembershipLevelNon-Member`)
beachRetail <- beach1 %>%
select(-UpgradeRevenue)
beachUpgrade <- beach1 %>%
select(-RetailRevenue)
# Creating linear model 1
modelRetail <- lm(RetailRevenue ~ ., data = beachRetail)
# Creating linear model 2
modelUpgrade <- lm(UpgradeRevenue ~ ., data = beachUpgrade)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(tidyverse)
library(readr)
# Loading the library that reads in csv files
library(readr)
# Reading in the Beach Tan dataset
beach <- read.csv("BeachTan/BeachTan.csv")
# Viewing the head of the data
head(beach)
# Viewing the structure of the data
str(beach)
# changing the following numeric variables to factors
beach$UIDStoreLocation <- as.factor(beach$UIDStoreLocation)
beach$Gender <- as.factor(beach$Gender)
beach$MembershipType <- as.factor(beach$MembershipType)
beach$MembershipLevel <- as.factor(beach$MembershipLevel)
# changing the following character variable to a date
beach$DateJoined <- as.Date(beach$DateJoined, "%m/%d/%Y")
# Recoding the factors in Gender
beach$Gender <- recode_factor(beach$Gender,
"0" = "Female",
"1" = "Male")
# Recoding the factors in MemebershipType
beach$MembershipType <- recode_factor(beach$MembershipType,
"0" = "Non-Member",
"1" = "Monthly",
"2" = "Annual")
# Recoding the factors in MembershipLevel
beach$MembershipLevel <- recode_factor(beach$MembershipLevel,
"0" = "Non-Member",
"1" = "Fast",
"2" = "Faster",
"3" = "Fastest",
"4" = "Instant")
# Recoding the factors in UIDStoreLocation
beach$UIDStoreLocation <- recode_factor(beach$UIDStoreLocation,
"1" = "A",
"2" = "B",
"3" = "C",
"4" = "D",
"5" = "E",
"6" = "F",
"7" = "G",
"8" = "H",
"9" = "I",
"10" = "J")
# Loading the DataExplorer package
library(DataExplorer)
plot_missing(beach)
# Distribution of the continuous variables
plot_histogram(beach)
# The piping operator (%>%) and `select` functions belong to the dplyr package
beach <- beach %>%
select(-UIDClient)
# The `filter` function belongs to the dplyr package
filter(beach, DaysSinceJoined > 40000)
beach <- beach %>%
filter(DaysSinceJoined < 40000)
hist(beach$DaysSinceJoined)
library(lubridate)
month(beach$DateJoined)
month(beach$DateJoined, label = TRUE)
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_col()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar() +
xlab("Month") +
ylab("Count") +
labs(title = "First-Time Customers/Enrollment into Membership Program by Month") +
theme_bw()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar() +
scale_x_discrete(expand = c(0, 0)) +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_bw()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar() +
scale_y_continuous(expand = c(0, 0)) +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_bw()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_col(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0)) +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_bw()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0)) +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_bw()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 2000)) +
xlab("") +
ylab("") +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_bw()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 2000)) +
xlab("") +
ylab("") +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_white()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 2000)) +
xlab("") +
ylab("") +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_classic()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 2000)) +
xlab("") +
ylab("") +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_clean()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 2000)) +
xlab("") +
ylab("") +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_minimal()
library(lubridate)
beach$MonthJoined <- month(beach$DateJoined, label = TRUE)
ggplot(beach, aes(x = MonthJoined)) +
geom_bar(color = "black", fill = "gold") +
scale_y_continuous(expand = c(0, 0),
limits = c(0, 2000)) +
xlab("") +
ylab("") +
labs(title = "Number of First-Time Customers/Membership Program Enrollments by Month") +
theme_bw()
